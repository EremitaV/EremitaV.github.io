{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mml.it-minds.dk\\\\csharpreact\\\\ClientApp\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const [questions, setQuestions] = useState(() => {\n    var res = [];\n\n    for (let i = 0; i < 5; i++) {\n      res.push({\n        question: \"None\",\n        correct_answer: \"None\",\n        incorrect_answer: \"None\"\n      });\n    }\n  });\n  console.log(`Questions: ${questions}`);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    const response = await fetch('testing');\n    const data = await response.json();\n    console.log(data);\n    setQuestions(data);\n  }\n\n  const elems = [...Array(5).keys()].map(elem => /*#__PURE__*/_jsxDEV(Question, {\n    id: elem,\n    data: questions[elem]\n  }, elem, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 53\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [elems, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"blue-button\",\n      onClick: () => getData(),\n      children: \"New Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Quiz, \"4zPsAr+aHn7KAvOGfkPe6Clzq/4=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/mml.it-minds.dk/csharpreact/ClientApp/src/components/Quiz.js"],"names":["React","useState","useEffect","Question","Quiz","questions","setQuestions","res","i","push","question","correct_answer","incorrect_answer","console","log","getData","response","fetch","data","json","elems","Array","keys","map","elem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,MAAM;AAC7C,QAAIM,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,MAAAA,GAAG,CAACE,IAAJ,CAAS;AACLC,QAAAA,QAAQ,EAAE,MADL;AAELC,QAAAA,cAAc,EAAE,MAFX;AAGLC,QAAAA,gBAAgB,EAAE;AAHb,OAAT;AAKH;AACJ,GATyC,CAA1C;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaT,SAAU,EAApC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,OAAf,GAAyB;AACrB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAZ,IAAAA,YAAY,CAACY,IAAD,CAAZ;AACH;;AAED,QAAME,KAAK,GAAI,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAJ,EAAqBC,GAArB,CAAyBC,IAAI,iBAAI,QAAC,QAAD;AAAqB,IAAA,EAAE,EAAEA,IAAzB;AAA+B,IAAA,IAAI,EAAEnB,SAAS,CAACmB,IAAD;AAA9C,KAAeA,IAAf;AAAA;AAAA;AAAA;AAAA,UAAjC,CAAf;AACA,sBACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACMJ,KADN,eAEK;AACI,MAAA,SAAS,EAAC,aADd;AAEI,MAAA,OAAO,EAAE,MAAML,OAAO,EAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AASH;;GAjCQX,I;;KAAAA,I;AAmCT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport Question from \"./Question\"\r\n\r\nfunction Quiz() {\r\n    const [questions, setQuestions] = useState(() => {\r\n        var res = []\r\n        for (let i = 0; i < 5; i++) {\r\n            res.push({\r\n                question: \"None\",\r\n                correct_answer: \"None\",\r\n                incorrect_answer: \"None\"\r\n            })\r\n        }\r\n    })\r\n    console.log(`Questions: ${questions}`)\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    async function getData() {\r\n        const response = await fetch('testing')\r\n        const data = await response.json()\r\n        console.log(data)\r\n        setQuestions(data)\r\n    }\r\n\r\n    const elems =  [...Array(5).keys()].map(elem => <Question key={elem} id={elem} data={questions[elem]} /> )\r\n    return (\r\n       <div className=\"quiz\">\r\n            {elems}\r\n            <button \r\n                className=\"blue-button\"\r\n                onClick={() => getData()}\r\n            >New Questions</button>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Quiz"]},"metadata":{},"sourceType":"module"}