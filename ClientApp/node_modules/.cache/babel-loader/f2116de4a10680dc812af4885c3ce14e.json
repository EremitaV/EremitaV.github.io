{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mml.it-minds.dk\\\\csharpreact\\\\ClientApp\\\\src\\\\components\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Quiz from \"./Quiz\";\nimport QuizOption from \"./QuizOption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(props) {\n  _s();\n\n  const [chosen, setChosen] = useState([false, false, false, false]);\n  const [randomized, setRandomized] = useState(false);\n  const [options, setOptions] = useState([]);\n  var data = props.data;\n  useEffect(() => {\n    var correct = data.correct_answer;\n    var incorrect = data.incorrect_answers;\n    var temp = [...incorrect, correct].sort((a, b) => 0.49 - Math.random());\n    setOptions(temp);\n    setRandomized(true);\n    return function cleanup() {\n      setChosen([false, false, false, false]);\n    };\n  }, []);\n\n  function handleClick(id) {\n    if (!chosen.some(elem => elem)) {\n      setChosen(prev => prev.map((elem, ind) => {\n        if (ind === id) {\n          props.handleClick;\n          return true;\n        }\n\n        return elem;\n      }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Question \", props.id + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      dangerouslySetInnerHTML: {\n        __html: props.data.question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question--options\",\n      children: randomized ? options.map((val, index) => /*#__PURE__*/_jsxDEV(QuizOption, {\n        handleClick: () => handleClick(index),\n        option: val,\n        isCorrect: val === props.data.correct_answer ? true : false,\n        chosen: chosen[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 58\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Question, \"R6ApA5OnuH0L4TkdrYQhLIP48vQ=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/mml.it-minds.dk/csharpreact/ClientApp/src/components/Question.js"],"names":["React","useEffect","useState","Quiz","QuizOption","Question","props","chosen","setChosen","randomized","setRandomized","options","setOptions","data","correct","correct_answer","incorrect","incorrect_answers","temp","sort","a","b","Math","random","cleanup","handleClick","id","some","elem","prev","map","ind","__html","question","val","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CAAD,CAApC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAIW,IAAI,GAAGP,KAAK,CAACO,IAAjB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,OAAO,GAAGD,IAAI,CAACE,cAAnB;AACA,QAAIC,SAAS,GAAGH,IAAI,CAACI,iBAArB;AACA,QAAIC,IAAI,GAAG,CAAC,GAAGF,SAAJ,EAAeF,OAAf,EAAwBK,IAAxB,CAA6B,CAACC,CAAD,EAAIC,CAAJ,KAAU,OAAOC,IAAI,CAACC,MAAL,EAA9C,CAAX;AACAX,IAAAA,UAAU,CAACM,IAAD,CAAV;AACAR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,WAAO,SAASc,OAAT,GAAmB;AACtBhB,MAAAA,SAAS,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CAAD,CAAT;AACH,KAFD;AAGH,GATQ,EASP,EATO,CAAT;;AAWA,WAASiB,WAAT,CAAqBC,EAArB,EAAyB;AACrB,QAAI,CAACnB,MAAM,CAACoB,IAAP,CAAYC,IAAI,IAAIA,IAApB,CAAL,EAAgC;AAC5BpB,MAAAA,SAAS,CAACqB,IAAI,IAAIA,IAAI,CAACC,GAAL,CAAS,CAACF,IAAD,EAAOG,GAAP,KAAc;AACrC,YAAIA,GAAG,KAAKL,EAAZ,EAAgB;AACZpB,UAAAA,KAAK,CAACmB,WAAN;AACA,iBAAO,IAAP;AACH;;AACD,eAAOG,IAAP;AACH,OANiB,CAAT,CAAT;AAOH;AACJ;;AAID,sBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACI;AAAA,8BAActB,KAAK,CAACoB,EAAN,GAAW,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,uBAAuB,EAAE;AAAEM,QAAAA,MAAM,EAAE1B,KAAK,CAACO,IAAN,CAAWoB;AAArB;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACKxB,UAAU,GAAGE,OAAO,CAACmB,GAAR,CAAY,CAACI,GAAD,EAAKC,KAAL,kBAAe,QAAC,UAAD;AACrC,QAAA,WAAW,EAAE,MAAMV,WAAW,CAACU,KAAD,CADO;AAErC,QAAA,MAAM,EAAED,GAF6B;AAGrC,QAAA,SAAS,EAAEA,GAAG,KAAK5B,KAAK,CAACO,IAAN,CAAWE,cAAnB,GAAoC,IAApC,GAA2C,KAHjB;AAIrC,QAAA,MAAM,EAAER,MAAM,CAAC4B,KAAD;AAJuB;AAAA;AAAA;AAAA;AAAA,cAA3B,CAAH,gBAKL;AAAA;AAAA;AAAA;AAAA;AANV;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA9CQ9B,Q;;KAAAA,Q;AAgDT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport Quiz from \"./Quiz\"\r\nimport QuizOption from \"./QuizOption\"\r\nfunction Question(props) {\r\n\r\n    const [chosen, setChosen] = useState([false,false,false,false])\r\n    const [randomized, setRandomized] = useState(false)\r\n    const [options, setOptions] = useState([])\r\n    var data = props.data\r\n\r\n    useEffect(() => {\r\n        var correct = data.correct_answer\r\n        var incorrect = data.incorrect_answers\r\n        var temp = [...incorrect, correct].sort((a, b) => 0.49 - Math.random())\r\n        setOptions(temp)\r\n        setRandomized(true)\r\n        return function cleanup() {\r\n            setChosen([false,false,false,false])\r\n        }\r\n    },[])\r\n\r\n    function handleClick(id) {\r\n        if (!chosen.some(elem => elem)) {\r\n            setChosen(prev => prev.map((elem, ind)=> {\r\n                if (ind === id) {\r\n                    props.handleClick;\r\n                    return true\r\n                }\r\n                return elem;\r\n            }))\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"main-container question\">\r\n            <h1>Question {props.id + 1}</h1>\r\n            <h3 dangerouslySetInnerHTML={{ __html: props.data.question}}></h3>\r\n            <div className=\"question--options\">\r\n                {randomized ? options.map((val,index) => <QuizOption \r\n                    handleClick={() => handleClick(index)}\r\n                    option={val}\r\n                    isCorrect={val === props.data.correct_answer ? true : false}\r\n                    chosen={chosen[index]}\r\n                />) : <div></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}