{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mml.it-minds.dk\\\\csharpreact\\\\ClientApp\\\\src\\\\components\\\\Tenzies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from \"react\";\nimport Die from \"./Die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Tenzies extends Component {\n  render() {\n    return tenzies();\n  }\n\n}\nTenzies.displayName = Tenzies.name;\nexport default function tenzies() {\n  _s();\n\n  const [dice, setDice] = useState(allNewDice());\n  const [tenzies, setTenzies] = useState(false);\n  const [numberOfRolls, setNumberOfRolls] = useState(1);\n  const [startTime, setStartTime] = useState(Date.now());\n  const [endTime, setEndTime] = useState(Date.now());\n  const [highscore, setHighScore] = useState(JSON.parse(localStorage.getItem(\"highscore\")) || {\n    rolls: 1000,\n    time: 1000\n  });\n  useEffect(() => {\n    console.log(`numberOfRolls: ${numberOfRolls}`);\n    console.log(`current highscore: ${highscore.rolls}`);\n  }, [tenzies]);\n  useEffect(() => {\n    const allHeld = dice.every(die => die.isHeld);\n    const firstValue = dice[0].value;\n    const allSameValue = dice.every(die => die.value === firstValue);\n\n    if (allHeld && allSameValue) {\n      setEndTime(Date.now());\n      setHighScore(prev => {\n        let res = {\n          rolls: highscore.rolls,\n          time: highscore.time\n        };\n\n        if (numberOfRolls < highscore.rolls) {\n          res.rolls = numberOfRolls;\n          localStorage.setItem(\"highscore\", JSON.stringify(res));\n          setHighScore(res);\n        }\n\n        if (timeInSeconds(startTime, endTime) < highscore.time) {\n          res.rolls = timeInSeconds(startTime, endTime);\n          localStorage.setItem(\"highscore\", JSON.stringify(res));\n          setHighScore(res);\n        }\n\n        return res;\n      });\n      setTenzies(true);\n    }\n  }, [dice]);\n\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    if (!tenzies) {\n      setDice(oldDice => oldDice.map(die => {\n        return die.isHeld ? die : generateNewDie();\n      }));\n      setNumberOfRolls(prevCount => prevCount + 1);\n    } else {\n      setTenzies(false);\n      setDice(allNewDice());\n      setNumberOfRolls(1);\n      setStartTime(Date.now());\n    }\n  }\n\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? { ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  }\n\n  function timeInSeconds(startTime, endTime) {\n    return Math.floor((endTime - startTime) / 1000);\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [tenzies && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: tenzies ? \"New Game\" : \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), tenzies ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You won in \", numberOfRolls, \" rolls in \", timeInSeconds(startTime, endTime), \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 24\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(tenzies, \"hHMQBO7ifDGXbBL0FjRrmjG06cY=\");","map":{"version":3,"sources":["C:/Users/mml.it-minds.dk/csharpreact/ClientApp/src/components/Tenzies.js"],"names":["React","useState","useEffect","Component","Die","nanoid","Confetti","Tenzies","render","tenzies","displayName","name","dice","setDice","allNewDice","setTenzies","numberOfRolls","setNumberOfRolls","startTime","setStartTime","Date","now","endTime","setEndTime","highscore","setHighScore","JSON","parse","localStorage","getItem","rolls","time","console","log","allHeld","every","die","isHeld","firstValue","value","allSameValue","prev","res","setItem","stringify","timeInSeconds","generateNewDie","Math","ceil","random","id","newDice","i","push","rollDice","oldDice","map","prevCount","holdDice","floor","diceElements"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Component} from \"react\"\nimport Die from \"./Die\"\nimport {nanoid} from \"nanoid\"\nimport Confetti from \"react-confetti\"\n\nexport class Tenzies extends Component {\n    static displayName = Tenzies.name;\n\n    render() {\n        return tenzies()\n    }\n}\n\nexport default function tenzies() {\n\n    const [dice, setDice] = useState(allNewDice())\n    const [tenzies, setTenzies] = useState(false)\n    const [numberOfRolls, setNumberOfRolls] = useState(1)\n    const [startTime, setStartTime] = useState(Date.now())\n    const [endTime, setEndTime] = useState(Date.now())\n    const [highscore, setHighScore] = useState(JSON.parse(localStorage.getItem(\"highscore\")) || {rolls: 1000, time: 1000})\n\n\n    useEffect(() => {\n        console.log(`numberOfRolls: ${numberOfRolls}`)\n        console.log(`current highscore: ${highscore.rolls}`)\n    }, [tenzies])\n    \n    useEffect(() => {\n        const allHeld = dice.every(die => die.isHeld)\n        const firstValue = dice[0].value\n        const allSameValue = dice.every(die => die.value === firstValue)\n        if (allHeld && allSameValue) {\n            setEndTime(Date.now())\n            setHighScore(prev => {\n                let res = {rolls: highscore.rolls, time: highscore.time}\n                if (numberOfRolls < highscore.rolls) {\n                    res.rolls = numberOfRolls\n                    localStorage.setItem(\"highscore\",JSON.stringify(res))\n                    setHighScore(res)\n                }\n                if (timeInSeconds(startTime, endTime) < highscore.time) {\n                    res.rolls = timeInSeconds(startTime, endTime)\n                    localStorage.setItem(\"highscore\",JSON.stringify(res))\n                    setHighScore(res)\n                }\n                return res\n            })\n            setTenzies(true)\n        }\n    }, [dice])\n\n    function generateNewDie() {\n        return {\n            value: Math.ceil(Math.random() * 6),\n            isHeld: false,\n            id: nanoid()\n        }\n    }\n    \n    function allNewDice() {\n        const newDice = []\n        for (let i = 0; i < 10; i++) {\n            newDice.push(generateNewDie())\n        }\n        return newDice\n    }\n    \n    function rollDice() {\n        if(!tenzies) {\n            setDice(oldDice => oldDice.map(die => {\n                return die.isHeld ? \n                    die :\n                    generateNewDie()\n            }))\n            setNumberOfRolls(prevCount => prevCount + 1)\n        } else {\n            setTenzies(false)\n            setDice(allNewDice())\n            setNumberOfRolls(1)\n            setStartTime(Date.now())\n        }\n    }\n    \n    function holdDice(id) {\n        setDice(oldDice => oldDice.map(die => {\n            return die.id === id ? \n                {...die, isHeld: !die.isHeld} :\n                die\n        }))\n    }\n\n    function timeInSeconds(startTime, endTime) {\n        return Math.floor((endTime-startTime)/ 1000)\n    }\n    \n    const diceElements = dice.map(die => (\n        <Die \n            key={die.id} \n            value={die.value} \n            isHeld={die.isHeld} \n            holdDice={() => holdDice(die.id)}\n        />\n    ))\n    \n    return (\n        <div className=\"main-container\">\n            {tenzies && <Confetti />}\n            <h1 className=\"title\">Tenzies</h1>\n            <p className=\"instructions\">Roll until all dice are the same. \n            Click each die to freeze it at its current value between rolls.</p>\n            <div className=\"dice-container\">\n                {diceElements}\n            </div>\n            <button \n                className=\"roll-dice\" \n                onClick={rollDice}\n            >\n                {tenzies ? \"New Game\" : \"Roll\"}\n            </button>\n            {tenzies ? <p>You won in {numberOfRolls} rolls in {timeInSeconds(startTime, endTime)} seconds</p> : \"\"}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}