{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mml.it-minds.dk\\\\csharpreact\\\\ClientApp\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { nanoid } from 'nanoid';\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const NUM_OF_QUESTIONS = 5;\n  const [questions, setQuestions] = useState([]);\n  const [loadedQuestions, setLoadedQUestions] = useState(false);\n  const [correctlyAnswered, setCorrectlyAnswered] = useState(0);\n  console.log(`Questions: ${questions}`);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function handleClick() {\n    getData();\n    scrollToTop();\n  }\n\n  async function getData() {\n    const response = await fetch('api/quiz');\n    const data = await response.json();\n    console.log(data);\n    setQuestions(data);\n    setLoadedQUestions(true);\n  }\n\n  function handleCorrect() {\n    console.log(\"here\");\n    setCorrectlyAnswered(prev => prev + 1);\n  }\n\n  function scrollToTop() {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  return loadedQuestions ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [[...Array(NUM_OF_QUESTIONS).keys()].map(elem => /*#__PURE__*/_jsxDEV(Question, {\n      id: elem,\n      data: questions[elem],\n      handleClick: () => handleCorrect()\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Correctly answered \", correctlyAnswered, \" / \", NUM_OF_QUESTIONS]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"blue-button\",\n      onClick: handleClick,\n      children: \"New Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Technologies used\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created in React using functional components and Hooks such as \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://reactjs.org/docs/hooks-state.html\",\n        children: \"useState \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 79\n      }, this), \"and \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://reactjs.org/docs/hooks-effect.html\",\n        children: \"useEffect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 84\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://reactjs.org/docs/lifting-state-up.html\",\n        children: \"State has been lifted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), \" several times to accomidate functionality\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data is queried through the backend written in C# which then makes a call to a REST API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"TODO:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Use token to always get fresh questions in a session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Styling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Display number of correctly answered questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Be able to choose difficulty and categories of questions (will probably need controlled forms)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 8\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Fetching questions\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"rte2wYwkJNuFcw2HdWkUapS7qc4=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/mml.it-minds.dk/csharpreact/ClientApp/src/components/Quiz.js"],"names":["React","useState","useEffect","nanoid","Question","Quiz","NUM_OF_QUESTIONS","questions","setQuestions","loadedQuestions","setLoadedQUestions","correctlyAnswered","setCorrectlyAnswered","console","log","getData","handleClick","scrollToTop","response","fetch","data","json","handleCorrect","prev","window","scrollTo","top","behavior","Array","keys","map","elem"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport { nanoid } from 'nanoid'\r\nimport Question from \"./Question\"\r\n\r\nfunction Quiz() {\r\n    const NUM_OF_QUESTIONS = 5;\r\n    const [questions, setQuestions] = useState([])\r\n    const [loadedQuestions, setLoadedQUestions] = useState(false)\r\n    const [correctlyAnswered, setCorrectlyAnswered] = useState(0)\r\n    console.log(`Questions: ${questions}`)\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    function handleClick() {\r\n        getData()\r\n        scrollToTop()\r\n    }\r\n\r\n    async function getData() {\r\n        const response = await fetch('api/quiz')\r\n        const data = await response.json()\r\n        console.log(data)\r\n        setQuestions(data)\r\n        setLoadedQUestions(true)\r\n    }\r\n\r\n    function handleCorrect() {\r\n        console.log(\"here\")\r\n        setCorrectlyAnswered(prev => prev + 1)\r\n    }\r\n\r\n\r\n    function scrollToTop() {\r\n        window.scrollTo({\r\n          top: 0,\r\n          behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    return loadedQuestions ? (\r\n       <div className=\"quiz\">\r\n            {[...Array(NUM_OF_QUESTIONS).keys()].map(elem => \r\n                <Question \r\n                    key={nanoid()} \r\n                    id={elem} \r\n                    data={questions[elem]} \r\n                    handleClick={() => handleCorrect()}\r\n                /> )}\r\n            <p>Correctly answered {correctlyAnswered} / {NUM_OF_QUESTIONS}</p>\r\n            <button \r\n                className=\"blue-button\"\r\n                onClick={handleClick}\r\n            >New Questions</button>\r\n            <hr></hr>\r\n            <h3>Technologies used</h3>\r\n            <p>Created in React using functional components and Hooks such as <a href=\"https://reactjs.org/docs/hooks-state.html\">useState </a>\r\n            and <a href=\"https://reactjs.org/docs/hooks-effect.html\">useEffect</a>.<br/>\r\n            <a href=\"https://reactjs.org/docs/lifting-state-up.html\">State has been lifted</a> several times to accomidate functionality</p>\r\n            <p>Data is queried through the backend written in C# which then makes a call to a REST API</p>\r\n            <p>TODO:</p>\r\n            <ul>\r\n                <li>Use token to always get fresh questions in a session</li>\r\n                <li>Styling</li>\r\n                <li>Display number of correctly answered questions</li>\r\n                <li>Be able to choose difficulty and categories of questions (will probably need controlled forms)</li>\r\n            </ul>\r\n       </div>\r\n    ) : <p>Fetching questions</p>\r\n}\r\n\r\nexport default Quiz"]},"metadata":{},"sourceType":"module"}